// Automatically generated by MockGen. DO NOT EDIT!
// Source: rgxp.go

package mock

import (
	gomock "github.com/golang/mock/gomock"
	regexp "regexp"
)

// Mock of regexCompiler interface
type MockregexCompiler struct {
	ctrl     *gomock.Controller
	recorder *_MockregexCompilerRecorder
}

// Recorder for MockregexCompiler (not exported)
type _MockregexCompilerRecorder struct {
	mock *MockregexCompiler
}

func NewMockregexCompiler(ctrl *gomock.Controller) *MockregexCompiler {
	mock := &MockregexCompiler{ctrl: ctrl}
	mock.recorder = &_MockregexCompilerRecorder{mock}
	return mock
}

func (_m *MockregexCompiler) EXPECT() *_MockregexCompilerRecorder {
	return _m.recorder
}

func (_m *MockregexCompiler) Compile(pattern string) (*regexp.Regexp, error) {
	ret := _m.ctrl.Call(_m, "Compile", pattern)
	ret0, _ := ret[0].(*regexp.Regexp)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

func (_mr *_MockregexCompilerRecorder) Compile(arg0 interface{}) *gomock.Call {
	return _mr.mock.ctrl.RecordCall(_mr.mock, "Compile", arg0)
}
